apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-init-sql-configmap
data:
  init.sql: |
    -- Create the employees table if it doesn't exist
    CREATE TABLE IF NOT EXISTS employees (
      employee_id INTEGER PRIMARY KEY AUTOINCREMENT,
      first_name TEXT,
      last_name TEXT,
      department TEXT,
      job_title TEXT,
      email TEXT,
      phone_number TEXT,
      hire_date DATE,
      status TEXT
    );
    
  index.php: |
    <?php
    // Connection details
    $dbname = '/var/www/html/employees.db'; // Path to your SQLite database file
    $dsn = "sqlite:$dbname";

    try {
        // Connect to SQLite database
        $pdo = new PDO($dsn);
        $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Check if the employees table exists
        $result = $pdo->query("SELECT name FROM sqlite_master WHERE type='table' AND name='employees';");

        // If the employees table does not exist, run the SQL initialization script
        if ($result->fetchColumn() === false) {
            // Create the employees table
            $pdo->exec("
                CREATE TABLE IF NOT EXISTS employees (
                  employee_id INTEGER PRIMARY KEY AUTOINCREMENT,
                  first_name TEXT,
                  last_name TEXT,
                  department TEXT,
                  job_title TEXT,
                  email TEXT,
                  phone_number TEXT,
                  hire_date DATE,
                  status TEXT
                );
            ");

            // Insert sample employees if the table is empty
            $insertStatements = [
                "INSERT INTO employees (first_name, last_name, department, job_title, email, phone_number, hire_date, status)
                SELECT 'John', 'Doe', 'Sales', 'Sales Manager', 'john.doe@example.com', '(555) 123-4567', '2020-01-15', 'Active'
                WHERE NOT EXISTS (SELECT 1 FROM employees);",

                "INSERT INTO employees (first_name, last_name, department, job_title, email, phone_number, hire_date, status)
                SELECT 'Jane', 'Smith', 'Marketing', 'Marketing Specialist', 'jane.smith@example.com', '(555) 234-5678', '2021-03-20', 'Active'
                WHERE NOT EXISTS (SELECT 1 FROM employees);",

                "INSERT INTO employees (first_name, last_name, department, job_title, email, phone_number, hire_date, status)
                SELECT 'Alice', 'Johnson', 'IT', 'Software Engineer', 'alice.johnson@example.com', '(555) 345-6789', '2019-07-11', 'Inactive'
                WHERE NOT EXISTS (SELECT 1 FROM employees);",

                "INSERT INTO employees (first_name, last_name, department, job_title, email, phone_number, hire_date, status)
                SELECT 'Bob', 'Brown', 'HR', 'HR Manager', 'bob.brown@example.com', '(555) 456-7890', '2018-11-05', 'Active'
                WHERE NOT EXISTS (SELECT 1 FROM employees);",

                "INSERT INTO employees (first_name, last_name, department, job_title, email, phone_number, hire_date, status)
                SELECT 'Charlie', 'Davis', 'Finance', 'Accountant', 'charlie.davis@example.com', '(555) 567-8901', '2022-02-14', 'Active'
                WHERE NOT EXISTS (SELECT 1 FROM employees);",

                "INSERT INTO employees (first_name, last_name, department, job_title, email, phone_number, hire_date, status)
                SELECT 'Diana', 'Moore', 'Sales', 'Sales Associate', 'diana.moore@example.com', '(555) 678-9012', '2023-05-01', 'Active'
                WHERE NOT EXISTS (SELECT 1 FROM employees);",

                "INSERT INTO employees (first_name, last_name, department, job_title, email, phone_number, hire_date, status)
                SELECT 'Ethan', 'Clark', 'Marketing', 'SEO Specialist', 'ethan.clark@example.com', '(555) 789-0123', '2023-06-10', 'Active'
                WHERE NOT EXISTS (SELECT 1 FROM employees);",

                "INSERT INTO employees (first_name, last_name, department, job_title, email, phone_number, hire_date, status)
                SELECT 'Fiona', 'Adams', 'IT', 'Systems Analyst', 'fiona.adams@example.com', '(555) 890-1234', '2022-09-15', 'Active'
                WHERE NOT EXISTS (SELECT 1 FROM employees);",

                "INSERT INTO employees (first_name, last_name, department, job_title, email, phone_number, hire_date, status)
                SELECT 'George', 'Wright', 'Finance', 'Financial Analyst', 'george.wright@example.com', '(555) 901-2345', '2020-04-22', 'Inactive'
                WHERE NOT EXISTS (SELECT 1 FROM employees);",

                "INSERT INTO employees (first_name, last_name, department, job_title, email, phone_number, hire_date, status)
                SELECT 'Hannah', 'Baker', 'HR', 'Recruiter', 'hannah.baker@example.com', '(555) 012-3456', '2021-08-30', 'Active'
                WHERE NOT EXISTS (SELECT 1 FROM employees);"
            ];

            // Execute each insert statement individually
            foreach ($insertStatements as $insertStatement) {
                $pdo->exec($insertStatement);
            }
        }

        // Fetch data from the employees table
        $stmt = $pdo->query("SELECT * FROM employees");
        $employees = $stmt->fetchAll(PDO::FETCH_ASSOC);

        // Start HTML output
        echo "<!DOCTYPE html>
        <html lang='en'>
        <head>
            <meta charset='UTF-8'>
            <meta name='viewport' content='width=device-width, initial-scale=1.0'>
            <title>Employees List</title>
            <link rel='stylesheet' href='styles.css'> <!-- Link to your CSS file if needed -->
            <style>
                table {
                    width: 100%;
                    border-collapse: collapse;
                }
                th, td {
                    border: 1px solid #ddd;
                    padding: 8px;
                    text-align: left;
                }
                th {
                    background-color: #f2f2f2;
                }
                h1 {
                    text-align: center;
                }
            </style>
        </head>
        <body>
            <h1>Employees List</h1>
            <table id='employeesTable'>
                <tr>
                    <th>ID</th>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Department</th>
                    <th>Job Title</th>
                    <th>Email</th>
                    <th>Phone</th>
                    <th>Hire Date</th>
                    <th>Status</th>
                </tr>";

        foreach ($employees as $employee) {
            echo "<tr>
                    <td>{$employee['employee_id']}</td>
                    <td>{$employee['first_name']}</td>
                    <td>{$employee['last_name']}</td>
                    <td>{$employee['department']}</td>
                    <td>{$employee['job_title']}</td>
                    <td>{$employee['email']}</td>
                    <td>{$employee['phone_number']}</td>
                    <td>{$employee['hire_date']}</td>
                    <td>{$employee['status']}</td>
                  </tr>";
        }

        echo "</table>
        </body>
        </html>";

    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
    }
    ?>
